/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.*;
/**
 *
 * @author Admin
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 581, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        CreateDatabase();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    
    // DB using H2
    // <editor-fold defaultstate="collapsed" desc="Database create">  
    public static void CreateDatabase(){
        try (Connection conn = DriverManager.getConnection("jdbc:h2:./bank", "sa", ""); Statement stmt = conn.createStatement()) {
            ResultSet rs;
            
            // TABELA KLIENCI
            stmt.execute("CREATE TABLE IF NOT EXISTS klienci (pesel CHAR(11) NOT NULL PRIMARY KEY, imie VARCHAR(16) NOT NULL, nazwisko VARCHAR(16) NOT NULL)");
            rs = stmt.executeQuery("SELECT * FROM klienci");
            if(!rs.next()){
                try (PreparedStatement ps = conn.prepareStatement("INSERT INTO klienci (pesel, imie, nazwisko) VALUES (?, ?, ?)")) {
                    Object[][] klienci = {
                        {"12345678901", "Jan",    "Kowalski"},
                        {"23456789012", "Anna",   "Nowak"},
                        {"34567890123", "Piotr",  "Wiśniewski"},
                        {"45678901234", "Maria",  "Wójcik"},
                        {"56789012345", "Tomasz", "Kamiński"}
                    };
                    for (Object[] klient : klienci) {
                        ps.setString(1, (String) klient[0]);
                        ps.setString(2, (String) klient[1]);
                        ps.setString(3, (String) klient[2]);
                        ps.executeUpdate();
                    }
                }
            }
            
            // TABELA KONTA
            stmt.execute("CREATE TABLE IF NOT EXISTS konta (nr_konta CHAR(26) NOT NULL PRIMARY KEY, pesel CHAR(11) NOT NULL, saldo DECIMAL(10,2) NOT NULL, FOREIGN KEY (pesel) REFERENCES klienci(pesel))");
            rs = stmt.executeQuery("SELECT * FROM konta");
            if(!rs.next()){
                try (PreparedStatement ps = conn.prepareStatement("INSERT INTO konta (nr_konta, pesel, saldo) VALUES (?, ?, ?)")) {
                    Object[][] konta = {
                        {"61109010140000071219812874", "12345678901", 2500.00},
                        {"61109010140000071219812875", "23456789012", 3500.50},
                        {"61109010140000071219812876", "34567890123", 1500.75},
                        {"61109010140000071219812877", "45678901234", 4200.00},
                        {"61109010140000071219812878", "56789012345", 980.20}
                    };
                    for (Object[] konto : konta) {
                        ps.setString(1, (String) konto[0]);
                        ps.setString(2, (String) konto[1]);
                        ps.setBigDecimal(3, new java.math.BigDecimal(konto[2].toString()));
                        ps.executeUpdate();
                    }
                }
            }
            
            // TABELA KARTY
            stmt.execute("CREATE TABLE IF NOT EXISTS karty (nr_karty CHAR(16) NOT NULL PRIMARY KEY, nr_konta CHAR(26) NOT NULL, FOREIGN KEY (nr_konta) REFERENCES konta(nr_konta))");
            rs = stmt.executeQuery("SELECT * FROM karty");
            if(!rs.next()){
                try (PreparedStatement ps = conn.prepareStatement("INSERT INTO karty (nr_karty, nr_konta) VALUES (?, ?)")) {
                    Object[][] karty = {
                        {"1111222233334444", "61109010140000071219812874"},
                        {"2222333344445555", "61109010140000071219812875"},
                        {"3333444455556666", "61109010140000071219812876"},
                        {"4444555566667777", "61109010140000071219812877"},
                        {"5555666677778888", "61109010140000071219812878"}
                    };

                    for (Object[] karta : karty) {
                        ps.setString(1, (String) karta[0]);
                        ps.setString(2, (String) karta[1]);
                        ps.executeUpdate();
                    }
                }
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    // </editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
